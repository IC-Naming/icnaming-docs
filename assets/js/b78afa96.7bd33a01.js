"use strict";(self.webpackChunkicnaming_docs=self.webpackChunkicnaming_docs||[]).push([[259],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3236:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:1},o="Canister To Go",i={unversionedId:"TechnicalReference/CanistersToGo",id:"TechnicalReference/CanistersToGo",title:"Canister To Go",description:"There are some canisters that are used by IC Naming to manage names. In this post we go through some simple scenarios to",source:"@site/docs/TechnicalReference/CanistersToGo.md",sourceDirName:"TechnicalReference",slug:"/TechnicalReference/CanistersToGo",permalink:"/TechnicalReference/CanistersToGo",editUrl:"https://github.com/IC-Naming/icnaming-docs/blob/main/docs/TechnicalReference/CanistersToGo.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Glossary",permalink:"/Concepts/ProtocolOverview/Glossary"},next:{title:"Registrar",permalink:"/TechnicalReference/Canister/Registrar"}},s={},c=[{value:"Registering a Name",id:"registering-a-name",level:2},{value:"Resolving a Name",id:"resolving-a-name",level:2},{value:"Updating a Resolving Record",id:"updating-a-resolving-record",level:2},{value:"Delete a Resolving Record",id:"delete-a-resolving-record",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"canister-to-go"},"Canister To Go"),(0,a.kt)("p",null,"There are some canisters that are used by IC Naming to manage names. In this post we go through some simple scenarios to\nunderstand how to perform business operations through their API."),(0,a.kt)("h2",{id:"registering-a-name"},"Registering a Name"),(0,a.kt)("p",null,'I want to register a name like "hello.icp".'),(0,a.kt)("p",null,"Canister related:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Registrar")),(0,a.kt)("p",null,"You can register a name by calling the ",(0,a.kt)("inlineCode",{parentName:"p"},"register_xxx")," methods on the Registrar."),(0,a.kt)("p",null,"For example, if you have a quota of LenEq(5) and you want to register a name of length 5, you can\ncall ",(0,a.kt)("inlineCode",{parentName:"p"},"register_with_quota")," on the Registrar:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'dfx canister call registrar register_with_quota "(\\"hello.icp\\", variant { LenEq = 5 })"\n')),(0,a.kt)("h2",{id:"resolving-a-name"},"Resolving a Name"),(0,a.kt)("p",null,'I want to resolve ICP address for a name like "hello.icp".'),(0,a.kt)("p",null,"Canister related:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Registry"),(0,a.kt)("li",{parentName:"ul"},"Resolver")),(0,a.kt)("p",null,"First, you need to get resolver of the name, then you can call ",(0,a.kt)("inlineCode",{parentName:"p"},"get_resolver")," method on the Registry:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'dfx canister call registry get_resolver "(\\"hello.icp\\")"\n')),(0,a.kt)("p",null,"Then you can call ",(0,a.kt)("inlineCode",{parentName:"p"},"get_record_value")," method on the Resolver:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'dfx canister call "resolver canister id from above" get_record_value "(\\"hello.icp\\")"\n')),(0,a.kt)("p",null,"Then you can get all values from result and find the value with key ",(0,a.kt)("inlineCode",{parentName:"p"},"token.icp"),"."),(0,a.kt)("p",null,"You can find more keys from ",(0,a.kt)("a",{parentName:"p",href:"ResolverKeys"},"Resolver Keys"),"."),(0,a.kt)("h2",{id:"updating-a-resolving-record"},"Updating a Resolving Record"),(0,a.kt)("p",null,'I want to update the resolving record for a name like "hello.icp" with key ',(0,a.kt)("inlineCode",{parentName:"p"},"token.icp"),' to "0x12345678".'),(0,a.kt)("p",null,"Canister related:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Registry"),(0,a.kt)("li",{parentName:"ul"},"Resolver")),(0,a.kt)("p",null,"First, you need to get resolver of the name, then you can call ",(0,a.kt)("inlineCode",{parentName:"p"},"get_resolver")," method on the Registry:"),(0,a.kt)("p",null,"Then you can call ",(0,a.kt)("inlineCode",{parentName:"p"},"set_record_value")," method on the Resolver:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'dfx canister call resolver set_record_value \'("hello.icp", vec { record {"token.icp"; "0x12345678"} })\'\n')),(0,a.kt)("p",null,"Then everything is done."),(0,a.kt)("h2",{id:"delete-a-resolving-record"},"Delete a Resolving Record"),(0,a.kt)("p",null,"I want to delete value of ",(0,a.kt)("inlineCode",{parentName:"p"},"token.icp"),' for a name like "hello.icp".'),(0,a.kt)("p",null,"You can do as ",(0,a.kt)("a",{parentName:"p",href:"#updating-a-resolving-record"},"Updating")," by sending an empty value with key ",(0,a.kt)("inlineCode",{parentName:"p"},"token.icp"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'dfx canister call resolver set_record_value \'("hello.icp", vec { record {"token.icp"; ""} })\'\n')))}u.isMDXComponent=!0}}]);