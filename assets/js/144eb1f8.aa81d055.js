"use strict";(self.webpackChunkicnaming_docs=self.webpackChunkicnaming_docs||[]).push([[529],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),l=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(r),m=n,d=u["".concat(s,".").concat(m)]||u[m]||f[m]||i;return r?a.createElement(d,c(c({ref:t},p),{},{components:r})):a.createElement(d,c({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,c=new Array(i);c[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,c[1]=o;for(var l=2;l<i;l++)c[l]=r[l];return a.createElement.apply(null,c)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},4281:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>f,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const i={},c="Canister DID",o={unversionedId:"TechnicalReference/Canister",id:"TechnicalReference/Canister",title:"Canister DID",description:"Registrar",source:"@site/docs/TechnicalReference/Canister.md",sourceDirName:"TechnicalReference",slug:"/TechnicalReference/Canister",permalink:"/TechnicalReference/Canister",draft:!1,editUrl:"https://github.com/IC-Naming/icnaming-docs/blob/main/docs/TechnicalReference/Canister.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Canister To Go",permalink:"/TechnicalReference/CanistersToGo"},next:{title:"Canister IDs",permalink:"/TechnicalReference/CanisterIds"}},s={},l=[{value:"Registrar",id:"registrar",level:2},{value:"Registry",id:"registry",level:2},{value:"Resolver",id:"resolver",level:2}],p={toc:l};function f(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"canister-did"},"Canister DID"),(0,n.kt)("h2",{id:"registrar"},"Registrar"),(0,n.kt)("p",null,"A registrar is a canister responsible for allocating domains. Canister to manage registration of names."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://icscan.io/canister/ft6xr-taaaa-aaaam-aafmq-cai"},"https://icscan.io/canister/ft6xr-taaaa-aaaam-aafmq-cai")),(0,n.kt)("h2",{id:"registry"},"Registry"),(0,n.kt)("p",null,"The core canister of IC Naming, the registry maintains a mapping from domain name (at any level - x, y.x, z.y.x etc) to owner, resolver, and time-to-live."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://icscan.io/canister/f542z-iqaaa-aaaam-aafnq-cai"},"https://icscan.io/canister/f542z-iqaaa-aaaam-aafnq-cai")),(0,n.kt)("h2",{id:"resolver"},"Resolver"),(0,n.kt)("p",null,"A resolver is a canister that maps from name to resource (e.g., cryptocurrency addresses, content hash, etc). Resolvers are pointed to by the resolver field of the registry."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://icscan.io/canister/fi3lu-jyaaa-aaaam-aafoa-cai"},"https://icscan.io/canister/fi3lu-jyaaa-aaaam-aafoa-cai")))}f.isMDXComponent=!0}}]);