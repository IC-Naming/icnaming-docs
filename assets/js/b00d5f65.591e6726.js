"use strict";(self.webpackChunkicnaming_docs=self.webpackChunkicnaming_docs||[]).push([[535],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=r.createContext({}),s=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(o.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,c=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=s(t),u=i,g=m["".concat(o,".").concat(u)]||m[u]||p[u]||c;return t?r.createElement(g,a(a({ref:n},d),{},{components:t})):r.createElement(g,a({ref:n},d))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var c=t.length,a=new Array(c);a[0]=m;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<c;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8871:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>s});var r=t(7462),i=(t(7294),t(3905));const c={},a="JS SDK",l={unversionedId:"TechnicalReference/JS-SDK",id:"TechnicalReference/JS-SDK",title:"JS SDK",description:"Installing",source:"@site/docs/TechnicalReference/JS-SDK.md",sourceDirName:"TechnicalReference",slug:"/TechnicalReference/JS-SDK",permalink:"/TechnicalReference/JS-SDK",draft:!1,editUrl:"https://github.com/IC-Naming/icnaming-docs/blob/main/docs/TechnicalReference/JS-SDK.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DICP",permalink:"/TechnicalReference/DICP"},next:{title:"Resolver Keys",permalink:"/TechnicalReference/ResolverKeys"}},o={},s=[{value:"Installing",id:"installing",level:2},{value:"Example",id:"example",level:2}],d={toc:s};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"js-sdk"},"JS SDK"),(0,i.kt)("h2",{id:"installing"},"Installing"),(0,i.kt)("p",null,"Using npm:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm install @dfinity/{agent,candid,principal} # dfinity needs\nnpm install @ic-naming/client\n")),(0,i.kt)("p",null,"Using yarn:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add @dfinity/{agent,candid,principal} # dfinity needs\nyarn add @ic-naming/client\n")),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import { Principal } from "@dfinity/principal";\nimport { IcNamingClient } from "@ic-naming/client";\n\nconst client = new IcNamingClient({\n  net: "IC", // IC | ICP | TICP\n  mode: "production", // local | production\n});\n\n// get records\nclient.getRecordsOfName("helloworld.ic").then((records) => {\n  // get ICP address(principal)\n  const principal = records.find((r) => r[0] === "principal.icp");\n  console.debug(`helloworld.ic\'s principal is ${principal}`);\n\n  // get ICP address(account id)\n  const accountId = records.find((r) => r[0] === "account_id.icp");\n  console.debug(`helloworld.ic\'s account id is ${accountId}`);\n\n  // get twitter\n  const twitter = records.find((r) => r[0] === "com.twitter");\n  console.debug(`helloworld.ic\'s twitter is ${twitter}`);\n\n  // get eth address\n  const ethAdddress = records.find((r) => r[0] === "token.eth");\n  console.debug(`helloworld.ic\'s eth adddress is ${ethAdddress}`);\n});\n\n// get name\'s registrant\nclient.getRegistrantOfName("helloworld.ic").then((registrant) => {\n  console.debug(`helloworld.ic\'s registrant is ${registrant}`);\n});\n\n// get name\'s expired time\nclient.getExpiredTimeOfName("helloworld.ic").then((timestamp) => {\n  const expiredTime = new Date(Number(timestamp));\n  console.debug(`helloworld.ic\'s expired time is ${expiredTime}`);\n});\n\n// get reverse resolve\nconst thePrincipal = Principal.fromText(\n  "v2xhg-um7x6-mhni4-sgqsc-qarqs-bgoyy-ngobl-qoe7c-7a4cm-bvn4f-pqe"\n);\n\nclient.getReverseResolve(thePrincipal).then((name) => {\n  if (name) console.debug(`reverse resolve name is ${name}`);\n  else console.debug(`reverse resolve name not exist`);\n});\n')))}p.isMDXComponent=!0}}]);